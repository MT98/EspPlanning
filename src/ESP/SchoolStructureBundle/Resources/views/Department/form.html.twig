
{# {{ form(form) }} #}



  {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

  {# Les erreurs générales du formulaire. #}
  {{ form_errors(form) }}

  {# Génération manuelle et éclatée : #}
  {% if form.name is defined %}
  <div class="form-group">
    {# Génération du label. #}
    {{ form_label(form.name, "Nom: ", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {# Affichage des erreurs pour ce champ précis. #}
    {{ form_errors(form.name) }}

    <div class="col-sm-10">
      {# Génération de l'input. #}
      {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>
  {% endif %}

  {% if form.description is defined %}
  {# Idem pour un autre champ. #}
  <div class="form-group">
    {{ form_label(form.description, "Description:", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.description) }}
    <div class="col-sm-10">
      {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>



  {% endif %}                        


  <br>
  
  {% if form.delete is defined %}
    <div class="form-group">
    <div class="col-sm-10">

        
          
         <p>Voulez-vous vraiment supprimer le département <em><i>{{department.name}}</i></em>?</p>

         <br>
        <a href="{{path('esp_schoolstructure_admin_department_view', {'id': department.id})}}" class="btn btn-default">Retourner au profil du département</a>
        {{ form_widget(form.delete, {'attr': {'class': 'btn btn-danger'}}) }}
    </div>
  </div>
  {% endif %}

  {% if form.departmentOptions is defined %}
 
  
  <div class="form-group">
    
    <div class="col-sm-2">
    {{ form_label(form.departmentOptions, "Option(s):", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    </div>

    <div class="col-sm-10">

    {{ form_widget(form.departmentOptions) }}
    <br/>
    <a href="#" id="add_option" class="btn btn-default">Ajouter une option</a>
    </div>
  </div> 

  {% endif %}
    {% if form.save is defined %}
      <hr>
      <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
        <div class="pull-right">
              {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
              <a href="{{path('esp_schoolstructure_admin_department_viewAll')}}" class="btn btn-default">Retourner à la liste </a>    

        </div>
        </div>
      </div>
      {% endif %}
{# Génération automatique des champs pas encore écrits.
     Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
     et tous les champs cachés (type « hidden »). #}
  {{ form_rest(form) }}

  {# Fermeture de la balise <form> du formulaire HTML #}
  {{ form_end(form) }}

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#esp_schoolstructurebundle_department_departmentOptions');

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_option').click(function(e) {
      addOption($container);

      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addOption($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire CategoryType
    function addOption($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var template = $container.attr('data-prototype')
        .replace(/__name__label__/g, 'Option n°' + (index+1))
        .replace(/__name__/g,        index) 
      ;

      // On crée un objet jquery qui contient ce template
      var $prototype = $(template);

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a> <br/> <br/> <br/>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
      $deleteLink.click(function(e) {
        $prototype.remove();

        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>